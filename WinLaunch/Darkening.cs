// -----------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by:
//        The WPF ShaderEffect Generator
//        http://wpfshadergenerator.codeplex.com
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// -----------------------------------------------------------------------------
namespace WinLaunch
{
    using System;
    using System.Windows;
    using System.Windows.Media.Effects;

    /// <summary>A simple color blending shader for WPF.</summary>
    public class Darkening : System.Windows.Media.Effects.ShaderEffect
    {
        /// <summary>The darkness offset.</summary>
        public static readonly DependencyProperty DarknessProperty = DependencyProperty.Register("Darkness", typeof(System.Single), typeof(Darkening), new PropertyMetadata((float)0, PixelShaderConstantCallback(0)));

        /// <summary>The implicit input sampler passed into the pixel shader by WPF.</summary>
        public static readonly DependencyProperty InputProperty = ShaderEffect.RegisterPixelShaderSamplerProperty("Input", typeof(Darkening), 0, SamplingMode.Auto);

        public Darkening()
        {
            PixelShader pixelShader = new PixelShader();
            pixelShader.UriSource = new Uri("/WinLaunch;component/Darkening.ps", UriKind.Relative);
            this.PixelShader = pixelShader;
            this.UpdateShaderValue(DarknessProperty);
            this.UpdateShaderValue(InputProperty);
            this.DdxUvDdyUvRegisterIndex = -1;
        }

        /// <summary>The darkness offset.</summary>
        public virtual float Darkness
        {
            get
            {
                return ((float)(this.GetValue(DarknessProperty)));
            }
            set
            {
                this.SetValue(DarknessProperty, value);
            }
        }

        /// <summary>The implicit input sampler passed into the pixel shader by WPF.</summary>
        public virtual System.Windows.Media.Brush Input
        {
            get
            {
                return ((System.Windows.Media.Brush)(this.GetValue(InputProperty)));
            }
            set
            {
                this.SetValue(InputProperty, value);
            }
        }
    }
}